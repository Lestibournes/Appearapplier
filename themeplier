#!/usr/bin/env python3

# MIT License

# Copyright (c) 2020 Yitzchak Schwarz

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import os, sys, time
from xdg import BaseDirectory
from gi.repository import GLib, Gio

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

home = os.path.expanduser("~")

class ThemeHandler(FileSystemEventHandler):
	def on_modified(self, event):
		if event.src_path.startswith(home + "/.gtkrc-2.0"):
			apply_theme()

def apply_theme():
	cursor_theme = None
	gtk_theme = None
	icon_theme = None

	# Get system default cursor theme:
	for line in open("/etc/alternatives/x-cursor-theme", "r").readlines():
		if line.startswith("Inherits="):
			cursor_theme = line.split("=")[1].strip()
			break

	# Read the theme from GTK2:
	for line in open(home + "/.gtkrc-2.0", "r"):
		if line.startswith("gtk-cursor-theme-name"):
			cursor_theme = line.split("=")[1].strip('\"\n')
		elif line.startswith("gtk-theme-name"):
			gtk_theme = line.split("=")[1].strip('\"\n')
		elif line.startswith("gtk-icon-theme-name"):
			icon_theme = line.split("=")[1].strip('\"\n')

	# Apply the theme everywhere:

	# GTK3:
	output = ""

	for line in open(home + "/.config/gtk-3.0/settings.ini"):
		if line.startswith("gtk-cursor-theme-name"):
			output += "gtk-cursor-theme-name=" + cursor_theme + "\n"
		elif line.startswith("gtk-theme-name"):
			output += "gtk-theme-name=" + gtk_theme + "\n"
		elif line.startswith("gtk-icon-theme-name"):
			output += "gtk-icon-theme-name=" + icon_theme + "\n"
		else:
			output += line

	open(home + "/.config/gtk-3.0/settings.ini", "w").write(output.strip("\n"))

	#User default:
	output = ""

	for line in open(home + "/.icons/default/index.theme", "r"):
		if line.startswith("Inherits"):
			output += "Inherits=" + cursor_theme + "\n"
		else:
			output += line

	open(home + "/.icons/default/index.theme", "w").write(output.strip("\n"))

	#The X session:
	output = ""

	for line in open(home + "/.Xresources", "r"):
		if line.startswith("Xcursor.theme:"):
			output += "Xcursor.theme: " + cursor_theme + "\n"
		else:
			output += line

	open(home + "/.Xresources", "w").write(output.strip("\n"))

	# GSettings:
	Gio.Settings.new("org.gnome.desktop.interface").set_string("cursor-theme", cursor_theme)
	Gio.Settings.new("org.gnome.desktop.interface").set_string("gtk-theme", gtk_theme)
	Gio.Settings.new("org.gnome.desktop.interface").set_string("icon-theme", icon_theme)

if __name__ == "__main__":
	apply_theme()
	
	if "-d" in sys.argv:
		# Run in the background and apply changes as they happen:
		observer = Observer()
		observer.schedule(ThemeHandler(), path=home, recursive=False)
		observer.start()

		try:
			while True:
				time.sleep(1)
		except KeyboardInterrupt:
			observer.stop()
		observer.join()